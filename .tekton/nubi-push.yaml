apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/brianwcook/nubi?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "push" && target_branch
      == "main"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: nubi
    appstudio.openshift.io/component: nubi
    pipelines.appstudio.openshift.io/type: build
  name: nubi-on-push
  namespace: brianwcook-tenant
spec:
  params:
  - name: dockerfile
    value: Dockerfile
  - name: git-url
    value: '{{source_url}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/brianwcook-tenant/nubi/nubi:{{revision}}
  - name: path-context
    value: .
  - name: revision
    value: '{{revision}}'
  pipelineSpec:
    finally:
      - name: show-sbom
        params:
          - name: IMAGE_URL
            value: $(tasks.build-container-amd64.results.IMAGE_URL)
        taskRef:
          params:
            - name: name
              value: show-sbom
            - name: bundle
              value: quay.io/redhat-appstudio-tekton-catalog/task-show-sbom:0.1@sha256:27ddf4ebef8f0b4a13a7ed980fe8130141d39e34546ae9e039fb016dc6e93a4b
            - name: kind
              value: task
          resolver: bundles
      - name: show-summary
        params:
          - name: pipelinerun-name
            value: $(context.pipelineRun.name)
          - name: git-url
            value: $(tasks.clone-repository.results.url)?rev=$(tasks.clone-repository.results.commit)
          - name: image-url
            value: $(params.output-image)
          - name: build-task-status
            value: $(tasks.build-container.status)
        taskRef:
          params:
            - name: name
              value: summary
            - name: bundle
              value: quay.io/redhat-appstudio-tekton-catalog/task-summary:0.2@sha256:e5115f5aac1a88e79ca4862852ef2bc1b84549e1179a28ebbc0e3dc0448ddfa8
            - name: kind
              value: task
          resolver: bundles
    params:
      - description: Source Repository URL
        name: git-url
        type: string
      - default: ""
        description: Revision of the Source Repository
        name: revision
        type: string
      - description: Fully Qualified Output Image
        name: output-image
        type: string
      - default: .
        description:
          Path to the source code of an application's component from where
          to build image.
        name: path-context
        type: string
      - default: Dockerfile
        description:
          Path to the Dockerfile inside the context specified by parameter
          path-context
        name: dockerfile
        type: string
      - default: "false"
        description: Force rebuild image
        name: rebuild
        type: string
      - default: "false"
        description: Skip checks against built image
        name: skip-checks
        type: string
      - default: "true"
        description: Skip optional checks, set false if you want to run optional checks
        name: skip-optional
        type: string
      - default: "false"
        description: Execute the build with network isolation
        name: hermetic
        type: string
      - default: ""
        description: Build dependencies to be prefetched by Cachi2
        name: prefetch-input
        type: string
      - default: "false"
        description: Java build
        name: java
        type: string
      - default: ""
        description:
          Image tag expiration time, time values could be something like
          1h, 2d, 3w for hours, days, and weeks, respectively.
        name: image-expires-after
    results:
      - description: ""
        name: IMAGE_URL
        value: $(tasks.build-container.results.IMAGE_URL)
      - description: ""
        name: IMAGE_DIGEST
        value: $(tasks.build-container.results.IMAGE_DIGEST)
      - description: ""
        name: CHAINS-GIT_URL
        value: $(tasks.clone-repository.results.url)
      - description: ""
        name: CHAINS-GIT_COMMIT
        value: $(tasks.clone-repository.results.commit)
      - description: ""
        name: JAVA_COMMUNITY_DEPENDENCIES
        value: $(tasks.build-container-amd64.results.JAVA_COMMUNITY_DEPENDENCIES)
    tasks:
      - name: init
        params:
          - name: image-url
            value: $(params.output-image)
          - name: rebuild
            value: $(params.rebuild)
          - name: skip-checks
            value: $(params.skip-checks)
          - name: skip-optional
            value: $(params.skip-optional)
          - name: pipelinerun-name
            value: $(context.pipelineRun.name)
          - name: pipelinerun-uid
            value: $(context.pipelineRun.uid)
        taskRef:
          params:
            - name: name
              value: init
            - name: bundle
              value: quay.io/redhat-appstudio-tekton-catalog/task-init:0.2@sha256:505edc39d9fb702a66baf40d9356226d4ff616959ec97110a7eacff209f90b08
            - name: kind
              value: task
          resolver: bundles
      - name: clone-repository
        params:
          - name: url
            value: $(params.git-url)
          - name: revision
            value: $(params.revision)
        runAfter:
          - init
        taskRef:
          params:
            - name: name
              value: git-clone
            - name: bundle
              value: quay.io/redhat-appstudio-tekton-catalog/task-git-clone:0.1@sha256:b1f6ffdf568bb534b36c60215fd48ecff682822dc2a060cc539a2909de96e47f
            - name: kind
              value: task
          resolver: bundles
        when:
          - input: $(tasks.init.results.build)
            operator: in
            values:
              - "true"
        workspaces:
          - name: output
            workspace: workspace
          - name: basic-auth
            workspace: git-auth
      - name: clone-repository-arm64
        params:
          - name: url
            value: $(params.git-url)
          - name: revision
            value: $(params.revision)
        runAfter:
          - init
        taskRef:
          kind: Task
          params:
            - name: name
              value: git-clone
            - name: bundle
              value: quay.io/redhat-appstudio-tekton-catalog/task-git-clone:0.1@sha256:b1f6ffdf568bb534b36c60215fd48ecff682822dc2a060cc539a2909de96e47f
            - name: kind
              value: task
          resolver: bundles
        when:
          - input: $(tasks.init.results.build)
            operator: in
            values:
              - "true"
        workspaces:
          - name: output
            workspace: workspace-arm64
          - name: basic-auth
            workspace: git-auth
      - name: build-container-amd64
        params:
          - name: IMAGE
            value: $(params.output-image)-amd64
          - name: DOCKERFILE
            value: $(params.dockerfile)
          - name: CONTEXT
            value: $(params.path-context)
          - name: HERMETIC
            value: $(params.hermetic)
          - name: PREFETCH_INPUT
            value: $(params.prefetch-input)
          - name: IMAGE_EXPIRES_AFTER
            value: $(params.image-expires-after)
          - name: COMMIT_SHA
            value: $(tasks.clone-repository.results.commit)
        runAfter:
          - clone-repository
        taskRef:
          params:
            - name: name
              value: buildah
            - name: bundle
              value: quay.io/redhat-appstudio-tekton-catalog/task-buildah:0.4@sha256:06f5421f54369acd867130a6404c54fc610411127ef24d45e61681fb555a66cb
            - name: kind
              value: task
          resolver: bundles
        when:
          - input: $(tasks.init.results.build)
            operator: in
            values:
              - "true"
        workspaces:
          - name: source
            workspace: workspace
      - name: build-container-arm64
        params:
          - name: IMAGE
            value: $(params.output-image)-arm64
          - name: DOCKERFILE
            value: $(params.dockerfile)
          - name: CONTEXT
            value: $(params.path-context)
          - name: HERMETIC
            value: $(params.hermetic)
          - name: PREFETCH_INPUT
            value: $(params.prefetch-input)
          - name: IMAGE_EXPIRES_AFTER
            value: $(params.image-expires-after)
          - name: COMMIT_SHA
            value: $(tasks.clone-repository.results.commit)
          - name: PLATFORM
            value: linux/arm64
        runAfter:
          - clone-repository-arm64
        taskRef:
          params:
            - name: name
              value: buildah-remote
            - name: bundle
              value: quay.io/redhat-appstudio-tekton-catalog/task-buildah-remote:0.4@sha256:ffe63326dd95ac7a673b5816cf082a24ba4bd2ebc1dd08aba3961f213309d413
            - name: kind
              value: task
          resolver: bundles
        when:
          - input: $(tasks.init.results.build)
            operator: in
            values:
              - "true"
        workspaces:
          - name: source
            workspace: workspace-arm64
      - name: build-container
        params:
          - name: IMAGE
            value: $(params.output-image)
          - name: COMMIT_SHA
            value: $(tasks.clone-repository.results.commit)
          - name: IMAGES
            value:
              - $(tasks.build-container-amd64.results.IMAGE_URL)@$(tasks.build-container-amd64.results.IMAGE_DIGEST)
              - $(tasks.build-container-arm64.results.IMAGE_URL)@$(tasks.build-container-arm64.results.IMAGE_DIGEST)
        runAfter:
          - build-container-amd64
          - build-container-arm64
        taskRef:
          params:
            - name: name
              value: build-image-manifest
            - name: bundle
              value: quay.io/redhat-appstudio-tekton-catalog/task-build-image-manifest:0.1@sha256:15d0619d9823045b90471bfbb6286c52c8e51ba247a19baf4b4b0bb81fe441f9
            - name: kind
              value: task
          resolver: bundles
        when:
          - input: $(tasks.init.results.build)
            operator: in
            values:
              - "true"
    workspaces:
      - name: workspace
      - name: git-auth
        optional: true
  workspaces:
    - name: workspace
      volumeClaimTemplate:
        metadata:
          creationTimestamp: null
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
        status: {}
    - name: workspace-arm64
      volumeClaimTemplate:
        metadata:
          creationTimestamp: null
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
        status: {}
    - name: git-auth
      secret:
        secretName: "{{ git_auth_secret }}"
status: {}